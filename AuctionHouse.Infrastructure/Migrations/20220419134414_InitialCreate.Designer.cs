// <auto-generated />
using System;
using AuctionHouse.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionHouse.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220419134414_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionHouse.Domain.Auction.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("EndsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("auction_ends");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Version"));

                    b.Property<string>("WinningBid")
                        .HasColumnType("text")
                        .HasColumnName("winning_bid");

                    b.HasKey("Id");

                    b.ToTable("auction", (string)null);
                });

            modelBuilder.Entity("AuctionHouse.Domain.BidHistory.Bid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid")
                        .HasColumnName("auction_id");

                    b.Property<Guid>("Bidder")
                        .HasColumnType("uuid")
                        .HasColumnName("bidder_id");

                    b.Property<DateTimeOffset>("TimeOfBid")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time_of_bid");

                    b.HasKey("Id");

                    b.ToTable("bid_history", (string)null);
                });

            modelBuilder.Entity("AuctionHouse.Domain.Auction.Auction", b =>
                {
                    b.OwnsOne("AuctionHouse.Domain.Auction.Money", "StartingPrice", b1 =>
                        {
                            b1.Property<Guid>("AuctionId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("starting_price");

                            b1.HasKey("AuctionId");

                            b1.ToTable("auction");

                            b1.WithOwner()
                                .HasForeignKey("AuctionId");
                        });

                    b.Navigation("StartingPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("AuctionHouse.Domain.BidHistory.Bid", b =>
                {
                    b.OwnsOne("AuctionHouse.Domain.Auction.Money", "AmountBid", b1 =>
                        {
                            b1.Property<Guid>("BidId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("bid");

                            b1.HasKey("BidId");

                            b1.ToTable("bid_history");

                            b1.WithOwner()
                                .HasForeignKey("BidId");
                        });

                    b.Navigation("AmountBid")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
